<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!--
  ~ Copyright (c) 2016.  Joe
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset name="PMD.rul" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>This ruleset was created from PMD.rul</description>

    <rule ref="rulesets/java/basic.xml">
        <exclude name="AvoidBranchingStatementAsLastInLoop"/>
    </rule>
    <rule ref="rulesets/java/braces.xml"/>
    <rule ref="rulesets/java/strings.xml">
        <!-- TODO: This warns about annotations, apparently fixed in a later version. -->
        <exclude name="AvoidDuplicateLiterals"/>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml"/>

    <rule ref="rulesets/java/design.xml">
        <!--treat if (x != y) diff(); else same(); as: if (x == y) same(); else diff(); -->
        <exclude name="ConfusingTernary"/>
        <!--Empty methods in an abstract class should be tagged as abstract.-->
        <exclude name="EmptyMethodInAbstractClassShouldBeAbstract"/>
        <!--<exclude name="AvoidSynchronizedAtMethodLevel"/>-->

        <!-- This check breaks on double checked locking which is safe in Java 6/7 -->
        <!--<exclude name="NonThreadSafeSingleton"/>-->

        <exclude name="AvoidReassigningParameters"/>
        <exclude name="GodClass"/>
        <!--字段应该在开始位置定义-->
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass"/>
        <!--空方法-->
        <exclude name="UncommentedEmptyMethodBody"/>
        <!--without default-->
        <!--<exclude name="SwitchStmtsShouldHaveDefault"/>-->
        <!--空的构造参数-->
        <exclude name="UncommentedEmptyConstructor"/>

    </rule>

    <rule ref="rulesets/java/empty.xml/EmptyCatchBlock" message="Commented blocks are ok">
        <properties>
            <property name="allowCommentedBlocks" value="true"/>
        </properties>
    </rule>

    <!--<rule ref="ignoreExplicitConstructorInvocation"-->


    <!--Overrides default check to avoid violation when @Synthetic annotation is present-->
    <!--<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor"-->
    <!--message="Document empty constructor">-->

    <!--<properties>-->
    <!--<property name="xpath">-->
    <!--<value>-->
    <!--<![CDATA[-->
    <!--//ConstructorDeclaration[@Private='false'][count(BlockStatement) = 0 and-->
    <!--($ignoreExplicitConstructorInvocation = 'true' or not(ExplicitConstructorInvocation)) and @containsComment = 'false'-->
    <!--and not(../Annotation/MarkerAnnotation/Name[@Image='Synthetic'])]-->
    <!--]]>-->
    <!--</value>-->
    <!--</property>-->

    <!--</properties>-->

    <!--</rule>-->


</ruleset>
